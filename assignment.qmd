---
title: "assignment"
format: html
editor: visual
---

## Load library and data

```{r}
#| eval: FALSE
#| message: FALSE
library(tidyverse)
library(broom)
biopsy <- read_csv("https://wilkelab.org/classes/SDS348/data_sets/biopsy.csv")
```

## PCA (Emmanuel)

```{r}
biopsy |>
  sample_n(5)
```

```{r}
pca_fit <- biopsy |>
  # We select only numerical data
  select(where(is.numeric)) |>
  # Scaling the data (variance and mean)
  scale() |>
  # Calculating the PCA
  prcomp()
```

### Projection over the two principal components

```{r fig.width = 8}
pca_fit |>
  # Adding the column from PCA to biopsy dataset
  augment(biopsy) |>
  # Plotting the projection on PC1 and PC2 stratifying with the outcome
  ggplot(aes(.fittedPC1, .fittedPC2, color = outcome)) +
  geom_point()
  
```

### Rotation matrix of the principal components

```{r fig.width = 8}
# How to plot the arrows for our graph
arrow_style <- arrow(
  angle = 20, ends = "first", type = "closed", length = grid::unit(8, "pt")
)

pca_fit |>
  # Selecting the correct matrix
  tidy(matrix = "rotation") |>
  # We need to have the PC values for each attributes (on the same row)
  pivot_wider(names_from = "PC", names_prefix = "PC", values_from = "value") |>
  # Plotting the direction of each attributes according to PC1 and PC2
  ggplot(aes(PC1, PC2)) + 
  geom_segment(xend = 0, yend = 0, arrow = arrow_style) + 
  geom_text(
    aes(label = column),
    hjust = 1, nudge_x = -0.02, 
    color = "#904C2F"
  ) +
  xlim(-1.25, .5) + ylim(-.5, 1) +
  coord_fixed()

```

### Variance explained by the principal components

```{r fig.width = 6}
pca_fit |>
  # Selecting eigenvalues matrix because it contains the percent explain by each PC
  tidy(matrix = "eigenvalues") |>
  ggplot(aes(PC, percent)) +
  geom_col(fill = "#56B4E9", alpha = 0.8) +
  scale_x_continuous(breaks = 1:9) +
  scale_y_continuous(
    labels = scales::percent_format(),
    expand = expansion(mult = c(0, 0.01))
  )
```

```{r}
pca_fit |>
  # Selecting eigenvalues matrix because it contains the percent explain by each PC
  tidy(matrix = "eigenvalues") |>
  ggplot(aes(x = PC, y = cumulative)) +
  # 90% variance explained line
  geom_hline(aes(yintercept = 0.9), color = 'red') +
  geom_line() + 
  geom_point(aes(color = PC)) +
  scale_x_continuous(breaks = 1:9) + 
  ylim(0,1) +
  theme(legend.position = "none")

```

# Adomas

### Load Libraries

```{r}
#| eval: FALSE
#| message: FALSE
library(tidyverse)
library(broom)
```

### Load Data

```{r}
raw_dir <- "data/_raw/"
data_file <- "gravier.RData"

load(file = str_c(raw_dir, data_file))
```

### Prepare Data

```{r}
# Dataset preparation
set.seed(676571)
cancer_data = mutate(as_tibble(pluck(gravier,"x")),
                     y=pluck(gravier,"y"),
                     pt_id=1:length(pluck(gravier, "y")),
                     age=round(rnorm(length(pluck(gravier,"y")),
                                     mean=55,sd=10),1))
cancer_data = rename(cancer_data,event_label=y)
cancer_data$age_group = cut(cancer_data$age,breaks=seq(10,100,by=10))
cancer_data = relocate(cancer_data,c(pt_id,age,age_group,pt_id,event_label))
```

### Perform PCA

```{r}
pca_fit <- cancer_data  |>  
  select(where(is.numeric)) |>  # retain only numeric columns
  select(!c(pt_id, age)) |> 
  prcomp(scale = TRUE) # do PCA on scaled data
```

## Visualize Data

### Plot data in principal coordinates

```{r}
pca_fit |> 
  augment(cancer_data)  |>  # add original dataset back in
  ggplot(aes(.fittedPC1, .fittedPC2, color = event_label)) + 
  geom_point(size = 1.5) +
  # scale_color_manual(
  #  values = c(malignant = "#D55E00", benign = "#0072B2")
  # ) +
  xlab('PC1') +
  ylab('PC2') +
  ggtitle('Cancer dataset projection onto PC 1 and 2') +
  guides(color = guide_legend(title = "Outcome")) +
  theme_minimal() 
```

We did not achieve any clear separation of the cancer outcomes. To further evaluate if the PCA yielded valuable dimensionality reduction for our dataset, we should look into the variance covered by each PC.

### Plot %variance explained by PC's

```{r}
pca_fit |> 
  tidy(matrix = "eigenvalues") %>%
  ggplot(aes(PC, percent)) +
  geom_col(fill = "#56B4E9", alpha = 0.8) +
  #scale_x_continuous(breaks = 1:9) +
  scale_y_continuous(
    labels = scales::percent_format(),
    expand = expansion(mult = c(0, 0.01))
  ) +
  ggtitle('% variance explained by principal components') +
  theme_minimal()
```

Only 8% of variance is explained by PC1, with all other PC's trailing well below that. However, given that over 2000 genes are analysed, it is not surprising that the variance cannot be explained by only few PC's.
